1. Pipe类的readerLine和writerLine方法：
	readerLine：从管道读取一行文本。
	writerLine：向管道写入一行文本。
2. Filter抽象类的transform方法：
	抽象方法，子类需要实现具体的数据处理逻辑。
3. Input过滤器的transform方法：
	功能：读取输入文件的每一行文本，并通过输出管道发送。
	关键代码：output.writerLine(line);
4. Shift过滤器的transform方法：
	功能：对每一行文本进行单词移位处理，并将结果通过输出管道发送。
	关键代码：
	StringBuffer lineBuffer = new StringBuffer();
	int index = i;
	for (int f = 0; f < count; f++) {
    		if (index >= count) index = 0;
    		lineBuffer.append(tokens.get(index) + " ");
    		index++;
	}
	output.writerLine(lineBuffer.toString());
5. Alphabetizer过滤器的transform方法：
	功能：读取输入管道的所有行，进行排序处理，并将结果通过输出管道发送。
	关键代码：
	Collections.sort(this.kwicList, new AlphabetizerComparator());
	for (String line : kwicList) {
    		output.writerLine(line);
	}
6. Output过滤器的transform方法：
	功能：读取输入管道的所有行，并将结果写入输出文件。
	关键代码：
	outputFile.write(input.readerLine() + "\n");